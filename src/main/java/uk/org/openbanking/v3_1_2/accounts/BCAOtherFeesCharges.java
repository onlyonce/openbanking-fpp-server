/*
 * Account and Transaction API Specification
 * Swagger for Account and Transaction API Specification
 *
 * OpenAPI spec version: v3.1.2
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package uk.org.openbanking.v3_1_2.accounts;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.Size;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Contains details of fees and charges which are not associated with either Overdraft or features/benefits
 */
@ApiModel(description = "Contains details of fees and charges which are not associated with either Overdraft or features/benefits")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-07-10T09:14:46.696896+02:00[Europe/Budapest]")
public class BCAOtherFeesCharges {
    /**
     * TariffType which defines the fee and charges.
     */
    public enum TariffTypeEnum {
        ELECTRONIC("Electronic"),

        MIXED("Mixed"),

        OTHER("Other");

        private String value;

        TariffTypeEnum(String value) {
            this.value = value;
        }

        @Override
        @JsonValue
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static TariffTypeEnum fromValue(String text) {
            for (TariffTypeEnum b : TariffTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + text + "'");
        }
    }

    @JsonProperty("TariffType")
    private TariffTypeEnum tariffType = null;

    @JsonProperty("FeeChargeCap")
    private List<BCAFeeChargeCap> feeChargeCap = null;

    @JsonProperty("OtherTariffType")
    private OtherTariffType otherTariffType = null;

    @JsonProperty("TariffName")
    private String tariffName = null;

    @JsonProperty("FeeChargeDetail")
    private List<BCAFeeChargeDetail> feeChargeDetail = null;

    public BCAOtherFeesCharges tariffType(TariffTypeEnum tariffType) {
        this.tariffType = tariffType;
        return this;
    }

    /**
     * TariffType which defines the fee and charges.
     *
     * @return tariffType
     **/
    @JsonProperty("TariffType")
    @ApiModelProperty(value = "TariffType which defines the fee and charges.")
    public TariffTypeEnum getTariffType() {
        return tariffType;
    }

    public void setTariffType(TariffTypeEnum tariffType) {
        this.tariffType = tariffType;
    }

    public BCAOtherFeesCharges feeChargeCap(List<BCAFeeChargeCap> feeChargeCap) {
        this.feeChargeCap = feeChargeCap;
        return this;
    }

    public BCAOtherFeesCharges addFeeChargeCapItem(BCAFeeChargeCap feeChargeCapItem) {
        if (this.feeChargeCap == null) {
            this.feeChargeCap = new ArrayList<>();
        }
        this.feeChargeCap.add(feeChargeCapItem);
        return this;
    }

    /**
     * Details about any caps (maximum charges) that apply to a particular or group of fee/charge
     *
     * @return feeChargeCap
     **/
    @JsonProperty("FeeChargeCap")
    @ApiModelProperty(value = "Details about any caps (maximum charges) that apply to a particular or group of fee/charge")
    public List<BCAFeeChargeCap> getFeeChargeCap() {
        return feeChargeCap;
    }

    public void setFeeChargeCap(List<BCAFeeChargeCap> feeChargeCap) {
        this.feeChargeCap = feeChargeCap;
    }

    public BCAOtherFeesCharges otherTariffType(OtherTariffType otherTariffType) {
        this.otherTariffType = otherTariffType;
        return this;
    }

    /**
     * Get otherTariffType
     *
     * @return otherTariffType
     **/
    @JsonProperty("OtherTariffType")
    @ApiModelProperty(value = "")
    public OtherTariffType getOtherTariffType() {
        return otherTariffType;
    }

    public void setOtherTariffType(OtherTariffType otherTariffType) {
        this.otherTariffType = otherTariffType;
    }

    public BCAOtherFeesCharges tariffName(String tariffName) {
        this.tariffName = tariffName;
        return this;
    }

    /**
     * Name of the tariff
     *
     * @return tariffName
     **/
    @JsonProperty("TariffName")
    @ApiModelProperty(value = "Name of the tariff")
    @Size(min = 1, max = 350)
    public String getTariffName() {
        return tariffName;
    }

    public void setTariffName(String tariffName) {
        this.tariffName = tariffName;
    }

    public BCAOtherFeesCharges feeChargeDetail(List<BCAFeeChargeDetail> feeChargeDetail) {
        this.feeChargeDetail = feeChargeDetail;
        return this;
    }

    public BCAOtherFeesCharges addFeeChargeDetailItem(BCAFeeChargeDetail feeChargeDetailItem) {
        if (this.feeChargeDetail == null) {
            this.feeChargeDetail = new ArrayList<>();
        }
        this.feeChargeDetail.add(feeChargeDetailItem);
        return this;
    }

    /**
     * Other fees/charges details
     *
     * @return feeChargeDetail
     **/
    @JsonProperty("FeeChargeDetail")
    @ApiModelProperty(value = "Other fees/charges details")
    @Size(min = 1)
    public List<BCAFeeChargeDetail> getFeeChargeDetail() {
        return feeChargeDetail;
    }

    public void setFeeChargeDetail(List<BCAFeeChargeDetail> feeChargeDetail) {
        this.feeChargeDetail = feeChargeDetail;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BCAOtherFeesCharges bcAOtherFeesCharges = (BCAOtherFeesCharges) o;
        return Objects.equals(this.tariffType, bcAOtherFeesCharges.tariffType) &&
                Objects.equals(this.feeChargeCap, bcAOtherFeesCharges.feeChargeCap) &&
                Objects.equals(this.otherTariffType, bcAOtherFeesCharges.otherTariffType) &&
                Objects.equals(this.tariffName, bcAOtherFeesCharges.tariffName) &&
                Objects.equals(this.feeChargeDetail, bcAOtherFeesCharges.feeChargeDetail);
    }

    @Override
    public int hashCode() {
        return Objects.hash(tariffType, feeChargeCap, otherTariffType, tariffName, feeChargeDetail);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class BCAOtherFeesCharges {\n");

        sb.append("    tariffType: ").append(toIndentedString(tariffType)).append("\n");
        sb.append("    feeChargeCap: ").append(toIndentedString(feeChargeCap)).append("\n");
        sb.append("    otherTariffType: ").append(toIndentedString(otherTariffType)).append("\n");
        sb.append("    tariffName: ").append(toIndentedString(tariffName)).append("\n");
        sb.append("    feeChargeDetail: ").append(toIndentedString(feeChargeDetail)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

