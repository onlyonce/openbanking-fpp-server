/*
 * Account and Transaction API Specification
 * Swagger for Account and Transaction API Specification
 *
 * OpenAPI spec version: v3.1.2
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package uk.org.openbanking.v3_1_2.accounts;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.Size;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * The group of tiers or bands for which credit interest can be applied.
 */
@ApiModel(description = "The group of tiers or bands for which credit interest can be applied.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-07-10T09:14:46.696896+02:00[Europe/Budapest]")
public class CreditInterestTierBandSet {
    @JsonProperty("Destination")
    private DestinationEnum              destination       = null;
    @JsonProperty("TierBandMethod")
    private TierBandMethodEnum           tierBandMethod    = null;
    @JsonProperty("CalculationMethod")
    private CalculationMethodEnum        calculationMethod = null;
    @JsonProperty("TierBand")
    private List<CreditInterestTierBand> tierBand          = null;
    @JsonProperty("Notes")
    private List<String>                 notes             = null;

    public CreditInterestTierBandSet destination(DestinationEnum destination) {
        this.destination = destination;
        return this;
    }

    /**
     * Describes whether accrued interest is payable only to the BCA or to another bank account
     *
     * @return destination
     **/
    @JsonProperty("Destination")
    @ApiModelProperty(value = "Describes whether accrued interest is payable only to the BCA or to another bank account")
    public DestinationEnum getDestination() {
        return destination;
    }

    public void setDestination(DestinationEnum destination) {
        this.destination = destination;
    }

    public CreditInterestTierBandSet tierBandMethod(TierBandMethodEnum tierBandMethod) {
        this.tierBandMethod = tierBandMethod;
        return this;
    }

    /**
     * The methodology of how credit interest is paid/applied. It can be:-  1. Banded Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.  2. Tiered Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.  3. Whole The same interest rate is applied irrespective of the BCA balance
     *
     * @return tierBandMethod
     **/
    @JsonProperty("TierBandMethod")
    @ApiModelProperty(value = "The methodology of how credit interest is paid/applied. It can be:-  1. Banded Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.  2. Tiered Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.  3. Whole The same interest rate is applied irrespective of the BCA balance")
    public TierBandMethodEnum getTierBandMethod() {
        return tierBandMethod;
    }

    public void setTierBandMethod(TierBandMethodEnum tierBandMethod) {
        this.tierBandMethod = tierBandMethod;
    }

    public CreditInterestTierBandSet calculationMethod(CalculationMethodEnum calculationMethod) {
        this.calculationMethod = calculationMethod;
        return this;
    }

    /**
     * Methods of calculating interest
     *
     * @return calculationMethod
     **/
    @JsonProperty("CalculationMethod")
    @ApiModelProperty(value = "Methods of calculating interest")
    public CalculationMethodEnum getCalculationMethod() {
        return calculationMethod;
    }

    public void setCalculationMethod(CalculationMethodEnum calculationMethod) {
        this.calculationMethod = calculationMethod;
    }

    public CreditInterestTierBandSet tierBand(List<CreditInterestTierBand> tierBand) {
        this.tierBand = tierBand;
        return this;
    }

    public CreditInterestTierBandSet addTierBandItem(CreditInterestTierBand tierBandItem) {
        if (this.tierBand == null) {
            this.tierBand = new ArrayList<>();
        }
        this.tierBand.add(tierBandItem);
        return this;
    }

    /**
     * Tier Band Details
     *
     * @return tierBand
     **/
    @JsonProperty("TierBand")
    @ApiModelProperty(value = "Tier Band Details")
    @Size(min = 1)
    public List<CreditInterestTierBand> getTierBand() {
        return tierBand;
    }

    public void setTierBand(List<CreditInterestTierBand> tierBand) {
        this.tierBand = tierBand;
    }

    public CreditInterestTierBandSet notes(List<String> notes) {
        this.notes = notes;
        return this;
    }

    public CreditInterestTierBandSet addNotesItem(String notesItem) {
        if (this.notes == null) {
            this.notes = new ArrayList<>();
        }
        this.notes.add(notesItem);
        return this;
    }

    /**
     * Optional additional notes to supplement the Tier Band Set details
     *
     * @return notes
     **/
    @JsonProperty("Notes")
    @ApiModelProperty(value = "Optional additional notes to supplement the Tier Band Set details")
    public List<String> getNotes() {
        return notes;
    }

    public void setNotes(List<String> notes) {
        this.notes = notes;
    }

    @Override
    public int hashCode() {
        return Objects.hash(destination, tierBandMethod, calculationMethod, tierBand, notes);
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreditInterestTierBandSet creditInterestTierBandSet = (CreditInterestTierBandSet) o;
        return Objects.equals(this.destination, creditInterestTierBandSet.destination) &&
                Objects.equals(this.tierBandMethod, creditInterestTierBandSet.tierBandMethod) &&
                Objects.equals(this.calculationMethod, creditInterestTierBandSet.calculationMethod) &&
                Objects.equals(this.tierBand, creditInterestTierBandSet.tierBand) &&
                Objects.equals(this.notes, creditInterestTierBandSet.notes);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreditInterestTierBandSet {\n");

        sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
        sb.append("    tierBandMethod: ").append(toIndentedString(tierBandMethod)).append("\n");
        sb.append("    calculationMethod: ").append(toIndentedString(calculationMethod)).append("\n");
        sb.append("    tierBand: ").append(toIndentedString(tierBand)).append("\n");
        sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Describes whether accrued interest is payable only to the BCA or to another bank account
     */
    public enum DestinationEnum {
        PAYAWAY("PayAway"),

        SELFCREDIT("SelfCredit");

        private String value;

        DestinationEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static DestinationEnum fromValue(String text) {
            for (DestinationEnum b : DestinationEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + text + "'");
        }

        @Override
        @JsonValue
        public String toString() {
            return String.valueOf(value);
        }
    }


    /**
     * The methodology of how credit interest is paid/applied. It can be:-  1. Banded Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.  2. Tiered Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.  3. Whole The same interest rate is applied irrespective of the BCA balance
     */
    public enum TierBandMethodEnum {
        BANDED("Banded"),

        TIERED("Tiered"),

        WHOLE("Whole");

        private String value;

        TierBandMethodEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static TierBandMethodEnum fromValue(String text) {
            for (TierBandMethodEnum b : TierBandMethodEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + text + "'");
        }

        @Override
        @JsonValue
        public String toString() {
            return String.valueOf(value);
        }
    }

    /**
     * Methods of calculating interest
     */
    public enum CalculationMethodEnum {
        COMPOUND("Compound"),

        SIMPLEINTEREST("SimpleInterest");

        private String value;

        CalculationMethodEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static CalculationMethodEnum fromValue(String text) {
            for (CalculationMethodEnum b : CalculationMethodEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + text + "'");
        }

        @Override
        @JsonValue
        public String toString() {
            return String.valueOf(value);
        }
    }
}

