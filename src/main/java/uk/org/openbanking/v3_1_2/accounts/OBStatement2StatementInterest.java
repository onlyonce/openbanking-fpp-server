/*
 * Account and Transaction API Specification
 * Swagger for Account and Transaction API Specification
 *
 * OpenAPI spec version: v3.1.2
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package uk.org.openbanking.v3_1_2.accounts;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.Size;
import java.math.BigDecimal;
import java.util.Objects;

/**
 * Set of elements used to provide details of a generic interest amount related to the statement resource.
 */
@ApiModel(description = "Set of elements used to provide details of a generic interest amount related to the statement resource.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-07-10T09:14:46.696896+02:00[Europe/Budapest]")
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
public class OBStatement2StatementInterest {
    @JsonProperty("Type")
    private String type = null;

    @JsonProperty("Description")
    private String description = null;

    @JsonProperty("Rate")
    private BigDecimal rate = null;

    @JsonProperty("Amount")
    private OBActiveOrHistoricCurrencyAndAmount5 amount = null;

    @JsonProperty("Frequency")
    private String frequency = null;

    @JsonProperty("CreditDebitIndicator")
    private OBCreditDebitCode0 creditDebitIndicator = null;

    @JsonProperty("RateType")
    private String rateType = null;

    public OBStatement2StatementInterest type(String type) {
        this.type = type;
        return this;
    }

    /**
     * Interest amount type, in a coded form.
     *
     * @return type
     **/
    @JsonProperty("Type")
    @ApiModelProperty(value = "Interest amount type, in a coded form.")
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public OBStatement2StatementInterest description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Description that may be available for the statement interest.
     *
     * @return description
     **/
    @JsonProperty("Description")
    @ApiModelProperty(value = "Description that may be available for the statement interest.")
    @Size(min = 1, max = 128)
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public OBStatement2StatementInterest rate(BigDecimal rate) {
        this.rate = rate;
        return this;
    }

    /**
     * field representing a percentage (e.g. 0.05 represents 5% and 0.9525 represents 95.25%). Note the number of decimal places may vary.
     *
     * @return rate
     **/
    @JsonProperty("Rate")
    @ApiModelProperty(value = "field representing a percentage (e.g. 0.05 represents 5% and 0.9525 represents 95.25%). Note the number of decimal places may vary.")
    public BigDecimal getRate() {
        return rate;
    }

    public void setRate(BigDecimal rate) {
        this.rate = rate;
    }

    public OBStatement2StatementInterest amount(OBActiveOrHistoricCurrencyAndAmount5 amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Get amount
     *
     * @return amount
     **/
    @JsonProperty("Amount")
    @ApiModelProperty(value = "")
    public OBActiveOrHistoricCurrencyAndAmount5 getAmount() {
        return amount;
    }

    public void setAmount(OBActiveOrHistoricCurrencyAndAmount5 amount) {
        this.amount = amount;
    }

    public OBStatement2StatementInterest frequency(String frequency) {
        this.frequency = frequency;
        return this;
    }

    /**
     * Specifies the statement fee type requested
     *
     * @return frequency
     **/
    @JsonProperty("Frequency")
    @ApiModelProperty(value = "Specifies the statement fee type requested")
    public String getFrequency() {
        return frequency;
    }

    public void setFrequency(String frequency) {
        this.frequency = frequency;
    }

    public OBStatement2StatementInterest creditDebitIndicator(OBCreditDebitCode0 creditDebitIndicator) {
        this.creditDebitIndicator = creditDebitIndicator;
        return this;
    }

    /**
     * Get creditDebitIndicator
     *
     * @return creditDebitIndicator
     **/
    @JsonProperty("CreditDebitIndicator")
    @ApiModelProperty(value = "")
    public OBCreditDebitCode0 getCreditDebitIndicator() {
        return creditDebitIndicator;
    }

    public void setCreditDebitIndicator(OBCreditDebitCode0 creditDebitIndicator) {
        this.creditDebitIndicator = creditDebitIndicator;
    }

    public OBStatement2StatementInterest rateType(String rateType) {
        this.rateType = rateType;
        return this;
    }

    /**
     * Description that may be available for the statement Interest rate type.
     *
     * @return rateType
     **/
    @JsonProperty("RateType")
    @ApiModelProperty(value = "Description that may be available for the statement Interest rate type.")
    public String getRateType() {
        return rateType;
    }

    public void setRateType(String rateType) {
        this.rateType = rateType;
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, description, rate, amount, frequency, creditDebitIndicator, rateType);
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OBStatement2StatementInterest obStatement2StatementInterest = (OBStatement2StatementInterest) o;
        return Objects.equals(this.type, obStatement2StatementInterest.type) &&
                Objects.equals(this.description, obStatement2StatementInterest.description) &&
                Objects.equals(this.rate, obStatement2StatementInterest.rate) &&
                Objects.equals(this.amount, obStatement2StatementInterest.amount) &&
                Objects.equals(this.frequency, obStatement2StatementInterest.frequency) &&
                Objects.equals(this.creditDebitIndicator, obStatement2StatementInterest.creditDebitIndicator) &&
                Objects.equals(this.rateType, obStatement2StatementInterest.rateType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OBStatement2StatementInterest {\n");

        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
        sb.append("    creditDebitIndicator: ").append(toIndentedString(creditDebitIndicator)).append("\n");
        sb.append("    rateType: ").append(toIndentedString(rateType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

