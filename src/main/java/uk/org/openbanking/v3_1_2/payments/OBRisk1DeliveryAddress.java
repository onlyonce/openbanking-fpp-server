/*
 * This Source Code Form is subject to the terms of the Mozilla
 * Public License, v. 2.0. If a copy of the MPL was not distributed
 * with this file, You can obtain one at
 *
 * https://mozilla.org/MPL/2.0/.
 */

/*
 * Payment Initiation API
 * Swagger for Payment Initiation API Specification
 *
 * OpenAPI spec version: v3.1.2
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package uk.org.openbanking.v3_1_2.payments;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Information that locates and identifies a specific address, as defined by postal services or in free format text.
 */
@ApiModel(description = "Information that locates and identifies a specific address, as defined by postal services or in free format text.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-07-09T18:27:25.589536+02:00[Europe/Budapest]")
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
public class OBRisk1DeliveryAddress {
    @JsonProperty("StreetName")
    private String streetName = null;

    @JsonProperty("CountrySubDivision")
    private List<String> countrySubDivision = null;

    @JsonProperty("AddressLine")
    private List<String> addressLine = null;

    @JsonProperty("BuildingNumber")
    private String buildingNumber = null;

    @JsonProperty("TownName")
    private String townName = null;

    @JsonProperty("Country")
    private String country = null;

    @JsonProperty("PostCode")
    private String postCode = null;

    public OBRisk1DeliveryAddress streetName(String streetName) {
        this.streetName = streetName;
        return this;
    }

    /**
     * Name of a street or thoroughfare.
     *
     * @return streetName
     **/
    @JsonProperty("StreetName")
    @ApiModelProperty(value = "Name of a street or thoroughfare.")
    @Size(min = 1, max = 70)
    public String getStreetName() {
        return streetName;
    }

    public void setStreetName(String streetName) {
        this.streetName = streetName;
    }

    public OBRisk1DeliveryAddress countrySubDivision(List<String> countrySubDivision) {
        this.countrySubDivision = countrySubDivision;
        return this;
    }

    public OBRisk1DeliveryAddress addCountrySubDivisionItem(String countrySubDivisionItem) {
        if (this.countrySubDivision == null) {
            this.countrySubDivision = new ArrayList<>();
        }
        this.countrySubDivision.add(countrySubDivisionItem);
        return this;
    }

    /**
     * Get countrySubDivision
     *
     * @return countrySubDivision
     **/
    @JsonProperty("CountrySubDivision")
    @ApiModelProperty(value = "")
    @Size(min = 0, max = 2)
    public List<String> getCountrySubDivision() {
        return countrySubDivision;
    }

    public void setCountrySubDivision(List<String> countrySubDivision) {
        this.countrySubDivision = countrySubDivision;
    }

    public OBRisk1DeliveryAddress addressLine(List<String> addressLine) {
        this.addressLine = addressLine;
        return this;
    }

    public OBRisk1DeliveryAddress addAddressLineItem(String addressLineItem) {
        if (this.addressLine == null) {
            this.addressLine = new ArrayList<>();
        }
        this.addressLine.add(addressLineItem);
        return this;
    }

    /**
     * Get addressLine
     *
     * @return addressLine
     **/
    @JsonProperty("AddressLine")
    @ApiModelProperty(value = "")
    @Size(min = 0, max = 2)
    public List<String> getAddressLine() {
        return addressLine;
    }

    public void setAddressLine(List<String> addressLine) {
        this.addressLine = addressLine;
    }

    public OBRisk1DeliveryAddress buildingNumber(String buildingNumber) {
        this.buildingNumber = buildingNumber;
        return this;
    }

    /**
     * Number that identifies the position of a building on a street.
     *
     * @return buildingNumber
     **/
    @JsonProperty("BuildingNumber")
    @ApiModelProperty(value = "Number that identifies the position of a building on a street.")
    @Size(min = 1, max = 16)
    public String getBuildingNumber() {
        return buildingNumber;
    }

    public void setBuildingNumber(String buildingNumber) {
        this.buildingNumber = buildingNumber;
    }

    public OBRisk1DeliveryAddress townName(String townName) {
        this.townName = townName;
        return this;
    }

    /**
     * Name of a built-up area, with defined boundaries, and a local government.
     *
     * @return townName
     **/
    @JsonProperty("TownName")
    @ApiModelProperty(value = "Name of a built-up area, with defined boundaries, and a local government.")
    @Size(min = 1, max = 35)
    public String getTownName() {
        return townName;
    }

    public void setTownName(String townName) {
        this.townName = townName;
    }

    public OBRisk1DeliveryAddress country(String country) {
        this.country = country;
        return this;
    }

    /**
     * Nation with its own government, occupying a particular territory.
     *
     * @return country
     **/
    @JsonProperty("Country")
    @ApiModelProperty(value = "Nation with its own government, occupying a particular territory.")
    @Pattern(regexp = "^[A-Z]{2,2}$")
    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public OBRisk1DeliveryAddress postCode(String postCode) {
        this.postCode = postCode;
        return this;
    }

    /**
     * Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.
     *
     * @return postCode
     **/
    @JsonProperty("PostCode")
    @ApiModelProperty(value = "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.")
    @Size(min = 1, max = 16)
    public String getPostCode() {
        return postCode;
    }

    public void setPostCode(String postCode) {
        this.postCode = postCode;
    }

    @Override
    public int hashCode() {
        return Objects.hash(streetName, countrySubDivision, addressLine, buildingNumber, townName, country, postCode);
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OBRisk1DeliveryAddress obRisk1DeliveryAddress = (OBRisk1DeliveryAddress) o;
        return Objects.equals(this.streetName, obRisk1DeliveryAddress.streetName) &&
                Objects.equals(this.countrySubDivision, obRisk1DeliveryAddress.countrySubDivision) &&
                Objects.equals(this.addressLine, obRisk1DeliveryAddress.addressLine) &&
                Objects.equals(this.buildingNumber, obRisk1DeliveryAddress.buildingNumber) &&
                Objects.equals(this.townName, obRisk1DeliveryAddress.townName) &&
                Objects.equals(this.country, obRisk1DeliveryAddress.country) &&
                Objects.equals(this.postCode, obRisk1DeliveryAddress.postCode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OBRisk1DeliveryAddress {\n");

        sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
        sb.append("    countrySubDivision: ").append(toIndentedString(countrySubDivision)).append("\n");
        sb.append("    addressLine: ").append(toIndentedString(addressLine)).append("\n");
        sb.append("    buildingNumber: ").append(toIndentedString(buildingNumber)).append("\n");
        sb.append("    townName: ").append(toIndentedString(townName)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

